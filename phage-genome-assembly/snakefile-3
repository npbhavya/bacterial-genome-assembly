#####################################################################
# Author: Bhavya Papudeshi 
# The steps in the code
#
# Steps in this workflow
# - checkv on the polished genomes
# - chev output to one file
# - rename the contigs with filename 
# - split files with multifasta to single fasta files
# - fastANI on the the split polished files 
# - mash on split polished files
#
# To run the snakefile;
# snakemake -s snakefile-3 --cores 10
######################################################################

import os
import sys
import glob

assembly, =glob_wildcards("polishing/{contigs}.fasta")
print(f"Input assembled files are {assembly}\n")

rule all:
	input:
		expand("checkv_polish_output/{contigs}-checkv/quality_summary.tsv", contigs=assembly),
		expand("checkv_polish_output/{contigs}-checkv/quality_summary2.tsv", contigs=assembly),
		"checkv_polish_output/phage_completeness.tsv",
		expand("polishing_redone/{contigs}.fasta", contigs=assembly),
		"polishing_split",
		"polished_genomes.txt",
		"fastANI_polished_genomes",
		"mash",
		"polished_genomes_mash_dist.tab"

rule checkv_run:
	input:
		"polishing/{contigs}.fasta"
	output:
		"checkv_polish_output/{contigs}-checkv/quality_summary.tsv"
	params:
		base="checkv_polish_output/{contigs}-checkv"
	resources:
		cpu=10
	shell:
		"""
		export CHECKVDB=db/checkv-db-v1.0
		checkv end_to_end  {input} {params.base} -t {resources.cpu}
		"""

rule checkv_output:
	input:
		"checkv_polish_output/{contigs}-checkv/quality_summary.tsv"
	output:
		"checkv_polish_output/{contigs}-checkv/quality_summary2.tsv"
	shell:
		"""
		sed 's|.*|{input},&|g' {input} > {output}
		"""

rule final_checkv_results:
	input:
		expand("checkv_polish_output/{contigs}-checkv/quality_summary2.tsv", contigs=assembly)
	output:
		"checkv_polish_output/phage_completeness.tsv"
	shell:
		"""
		cat {input}> {output}
		"""

rule rename_polished_genomes:
	input:
		"polishing/{contigs}.fasta"
	output:
		"polishing_redone/{contigs}.fasta"
	shell:
		"""
		BASENAME={input}
		faidx -e "lambda x: x + '_$BASENAME'" {input} > {output}
		"""

rule split_contigs:
	input:
		directory("polishing_redone")
	output:
		directory("polishing_split")
	shell:
		"""
		mkdir {output}
		for f in {input}/*.fasta
		do 
			faidx --split-files "$f" 
		done
		mv *.fasta {output}/.
		"""

rule polished_list:
	input:
		"polishing_split"
	output:
		"polished_genomes.txt"
	shell:
		"""
		ls {input} | grep ".fasta" > {output}
		sed -i 's|.*|polishing_split/& |g' {output}
		"""

rule fastani:
	input:
		ql="polished_genomes.txt",
		rl="polished_genomes.txt"
	output:
		"fastANI_polished_genomes"
	resources:
		cpu=10
	shell:
		"""
		/home/bhavya/opt/FastANI/fastANI --ql {input.ql} --rl {input.rl} -o {output} -t {resources.cpu} --matrix
		"""

rule mash_sketches:
	input:
		directory("polishing_split")
	output:
		directory("mash")
	shell:
		"""
		mkdir {output}
		for f in {input}/*.fasta
		do 
			mash sketch "$f" -o "$f".msh
		done
		mv {input}/*.msh {output}/.
		"""

rule mash_dist:
	input:
		dir=("mash")
	output:
		"polished_genomes_mash_dist.tab"
	shell:
		"""
		list=`ls {input} | sed 's|.*|mash/& |g'`
		for f in mash/*.msh
		do
			mash dist "$f" "$list" >> {output}
		done
		"""
