#####################################################################
# Running prinseq and assembly for the ED Strains
# Author: Bhavya Papudeshi 
# The steps in the code
#   Following the notes here https://github.com/rrwick/Trycycler/wiki/Guide-to-bacterial-genome-assembly
#   Input files - post filtlong nanopore reads
# - Assembly - flye, raven, miniasm
#
# To run the snakefile;
# snakemake -s snakemake-other-assemblies
######################################################################

import os
import sys
import glob 

#Directory with illumina paired end reads from MIGS
# The paired end reads have to be in the format {sample name}_R1_001.fastq.gz
#getting this code from https://github.com/linsalrob/EdwardsLab/blob/master/snakemake/process_metagenomes.snakefile

SAMPLES, = glob_wildcards('reads/{sample}.fastq')

if len(SAMPLES) == 0:
	sys.stderr.write(f"We did not find any fastq files in {SAMPLES}. Is this the right read dir?\n")
	sys.exit(0)

print(f"Samples are {SAMPLES}")

rule all:
	input:
		expand("filtlong/{sample}_good.fastq", sample=SAMPLES),
		expand("flye/{sample}/assembly.fasta", sample=SAMPLES),
		expand("raven/{sample}_assembly.fasta", sample=SAMPLES),
		expand("miniasm/{sample}_assembly.fasta", sample=SAMPLES) 
rule flye:
	input: 
		ont="filtlong/{sample}_good.fastq"
	params:
		out="flye/{sample}"
	resources:
		cpus = 12
	output:
		"flye/{sample}/assembly.fasta"
	shell:
		"flye --nano-corr {input.ont} --threads {resources.cpus} --plasmids --out-dir {params.out}"

rule raven:
	input:
		ont="filtlong/{sample}_good.fastq"
	resources:
		cpus =12
	output:
		out="raven/{sample}_assembly.fasta"
	run:
		"raven --threads {resources.cpus} {input.ont} > {output.out}"


rule miniasm:
	input:
		ont="filtlong/{sample}_good.fastq"
	output:
		fasta="miniasm/{sample}_assembly.fasta",
		gfa="miniasm/{sample}_assembly.gfa"
	resources:
		cpus=10
	run:
		shell("export PATH=/home1/bhavya/EDgenomes/trycycler/Minipolish:$PATH"),
		shell("export PATH=/home1/bhavya/EDgenomes/trycycler/any2fasta:$PATH"),
		shell("miniasm_and_minipolish.sh {input.ont} {resources.cpus} > {output.gfa}")
		shell ("any2fasta {output.gfa} > {output.fasta}")
